package data.scripts.world.systems;

import com.fs.starfarer.api.Global;
import com.fs.starfarer.api.campaign.JumpPointAPI;
import com.fs.starfarer.api.campaign.LocationAPI;
import com.fs.starfarer.api.campaign.PlanetAPI;
import com.fs.starfarer.api.campaign.SectorAPI;
import com.fs.starfarer.api.campaign.SectorEntityToken;
import com.fs.starfarer.api.campaign.StarSystemAPI;
import com.fs.starfarer.api.campaign.econ.MarketAPI;
import com.fs.starfarer.api.impl.campaign.procgen.DefenderDataOverride;
import com.fs.starfarer.api.impl.campaign.procgen.NebulaEditor;
import com.fs.starfarer.api.impl.campaign.procgen.StarAge;
import com.fs.starfarer.api.impl.campaign.procgen.StarSystemGenerator;
import com.fs.starfarer.api.impl.campaign.procgen.themes.DerelictThemeGenerator;
import com.fs.starfarer.api.impl.campaign.terrain.HyperspaceTerrainPlugin;
import com.fs.starfarer.api.impl.campaign.terrain.DebrisFieldTerrainPlugin.DebrisFieldParams;
import com.fs.starfarer.api.impl.campaign.terrain.DebrisFieldTerrainPlugin.DebrisFieldSource;
import com.fs.starfarer.api.impl.campaign.terrain.MagneticFieldTerrainPlugin.MagneticFieldParams;
import com.fs.starfarer.api.util.Misc;
import data.scripts.world.AddMarketplace;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;

public class Martinique {
   public void generate(SectorAPI sector) {
      StarSystemAPI system = sector.createStarSystem("Martinique");
      LocationAPI hyper = Global.getSector().getHyperspace();
      system.setBackgroundTextureFilename("graphics/backgrounds/background3.jpg");
      PlanetAPI martinique_star = system.initStar("martinique", "star_red_dwarf", 320.0F, 180.0F, 4.0F, 0.3F, 1.0F);
      system.setLightColor(new Color(240, 225, 200));
      system.addTag("theme_core");
      system.addTag("theme_core_populated");
      system.addTag("theme_dassault_system");
      PlanetAPI morningside = system.addPlanet("istl_planet_morningside", martinique_star, "Morningside", "barren", 240.0F, 50.0F, 840.0F, 40.0F);
      morningside.setCustomDescriptionId("planet_morningside");
      Misc.initConditionMarket(morningside);
      morningside.getMarket().addCondition("no_atmosphere");
      morningside.getMarket().addCondition("low_gravity");
      morningside.getMarket().addCondition("very_hot");
      morningside.getMarket().addCondition("ore_moderate");
      morningside.getMarket().getFirstCondition("ore_moderate").setSurveyed(true);
      SectorEntityToken morningside_field = system.addTerrain("magnetic_field", new MagneticFieldParams(60.0F, 90.0F, morningside, 60.0F, 120.0F, new Color(50, 30, 100, 30), 0.3F, new Color[]{new Color(50, 20, 110, 130), new Color(200, 50, 130, 190), new Color(250, 70, 150, 240), new Color(200, 80, 130, 255), new Color(75, 0, 160), new Color(127, 0, 255)}));
      morningside_field.setCircularOrbit(morningside, 0.0F, 0.0F, 100.0F);
      PlanetAPI valjean = system.addPlanet("istl_planet_valjean", martinique_star, "Valjean", "istl_aridbread", 0.0F, 120.0F, 2160.0F, 80.0F);
      valjean.getSpec().setGlowTexture(Global.getSettings().getSpriteName("hab_glows", "asharu"));
      valjean.getSpec().setGlowColor(new Color(255, 160, 30, 255));
      valjean.getSpec().setUseReverseLightForGlow(true);
      valjean.getSpec().setPitch(-15.0F);
      valjean.getSpec().setTilt(20.0F);
      valjean.applySpecChanges();
      valjean.setInteractionImage("illustrations", "mine");
      AddMarketplace.addMarketplace("independent", valjean, (ArrayList)null, "Valjean", 4, new ArrayList(Arrays.asList("frontier", "farmland_poor", "dissident", "large_refugee_population", "habitable", "population_4")), new ArrayList(Arrays.asList("waystation", "spaceport", "population")), new ArrayList(Arrays.asList("black_market", "open_market", "storage")), 0.3F);
      valjean.setCustomDescriptionId("planet_valjean");
      system.addRingBand(valjean, "misc", "rings_dust0", 256.0F, 3, Color.white, 256.0F, 480.0F, 90.0F, "ring", "The Baker's Lament");
      SectorEntityToken martinique_inner_buoy = system.addCustomEntity((String)null, "Martinique Nav Buoy", "nav_buoy", "dassault_mikoyan");
      martinique_inner_buoy.setCircularOrbitPointingDown(martinique_star, 180.0F, 2160.0F, 80.0F);
      JumpPointAPI jumpPoint1 = Global.getFactory().createJumpPoint("martinique_jump", "Pont-Martinique");
      jumpPoint1.setCircularOrbit(system.getEntityById("martinique"), 30.0F, 2160.0F, 80.0F);
      jumpPoint1.setRelatedPlanet(valjean);
      system.addEntity(jumpPoint1);
      SectorEntityToken relay = system.addCustomEntity("martinique_relay", "Martinique Relay", "comm_relay", "dassault_mikoyan");
      relay.setCircularOrbitPointingDown(system.getEntityById("martinique"), 150.0F, 5100.0F, 225.0F);
      system.addAsteroidBelt(martinique_star, 90, 3750.0F, 500.0F, 100.0F, 120.0F, "asteroid_belt", "Martinique Alpha Belt");
      system.addRingBand(martinique_star, "misc", "rings_dust0", 256.0F, 0, Color.white, 256.0F, 3600.0F, 105.0F, (String)null, (String)null);
      system.addRingBand(martinique_star, "misc", "rings_asteroids0", 256.0F, 1, Color.white, 256.0F, 3720.0F, 125.0F, (String)null, (String)null);
      PlanetAPI cosette = system.addPlanet("istl_planet_cosette", martinique_star, "Cosette", "barren-bombarded", 75.0F, 40.0F, 4200.0F, 180.0F);
      cosette.setCustomDescriptionId("planet_cosette");
      Misc.initConditionMarket(cosette);
      cosette.getMarket().addCondition("no_atmosphere");
      cosette.getMarket().addCondition("low_gravity");
      cosette.getMarket().addCondition("meteor_impacts");
      cosette.getMarket().addCondition("volatiles_diffuse");
      cosette.getMarket().getFirstCondition("volatiles_diffuse").setSurveyed(true);
      system.addAsteroidBelt(martinique_star, 90, 4550.0F, 500.0F, 290.0F, 310.0F, "asteroid_belt", "Martinique Beta Belt");
      system.addRingBand(martinique_star, "misc", "rings_dust0", 256.0F, 1, Color.white, 256.0F, 4500.0F, 305.0F, (String)null, (String)null);
      system.addRingBand(martinique_star, "misc", "rings_ice0", 256.0F, 2, Color.white, 256.0F, 4600.0F, 285.0F, (String)null, (String)null);
      DebrisFieldParams params1 = new DebrisFieldParams(450.0F, 1.5F, 1.0E7F, 0.0F);
      params1.source = DebrisFieldSource.MIXED;
      params1.baseSalvageXP = 500L;
      SectorEntityToken debrisBeta1 = Misc.addDebrisField(system, params1, StarSystemGenerator.random);
      debrisBeta1.setSensorProfile(1000.0F);
      debrisBeta1.setDiscoverable(true);
      debrisBeta1.setCircularOrbit(martinique_star, 60.0F, 4550.0F, 210.0F);
      debrisBeta1.setId("martinique_debrisBeta1");
      DebrisFieldParams params2 = new DebrisFieldParams(300.0F, 1.0F, 1.0E7F, 0.0F);
      params2.source = DebrisFieldSource.MIXED;
      params2.baseSalvageXP = 500L;
      SectorEntityToken debrisBeta2 = Misc.addDebrisField(system, params2, StarSystemGenerator.random);
      debrisBeta2.setSensorProfile(1000.0F);
      debrisBeta2.setDiscoverable(true);
      debrisBeta2.setCircularOrbit(martinique_star, 150.0F, 4550.0F, 210.0F);
      debrisBeta2.setId("martinique_debrisBeta2");
      DebrisFieldParams params3 = new DebrisFieldParams(400.0F, 1.2F, 1.0E7F, 0.0F);
      params3.source = DebrisFieldSource.MIXED;
      params3.baseSalvageXP = 500L;
      SectorEntityToken debrisBeta3 = Misc.addDebrisField(system, params3, StarSystemGenerator.random);
      debrisBeta3.setSensorProfile(1000.0F);
      debrisBeta3.setDiscoverable(true);
      debrisBeta3.setCircularOrbit(martinique_star, 270.0F, 5500.0F, 225.0F);
      debrisBeta3.setId("martinique_debrisBeta3");
      SectorEntityToken indStation = system.addCustomEntity("martinique_ind", "Novy Mir Starforge", "station_dme_outpost", "dassault_mikoyan");
      indStation.setCircularOrbitPointingDown(system.getEntityById("martinique"), 90.0F, 4900.0F, 225.0F);
      MarketAPI novymirMarket = AddMarketplace.addMarketplace("dassault_mikoyan", indStation, (ArrayList)null, "Novy Mir Starforge", 5, new ArrayList(Arrays.asList("free_market", "industrial_polity", "vice_demand", "population_5")), new ArrayList(Arrays.asList("battlestation_high", "patrolhq", "refining", "spaceport", "heavyindustry", "fuelprod", "population")), new ArrayList(Arrays.asList("black_market", "open_market", "storage")), 0.2F);
      novymirMarket.addIndustry("fuelprod", new ArrayList(Arrays.asList("synchrotron")));
      indStation.setCustomDescriptionId("novymir_starforge");
      PlanetAPI javert = system.addPlanet("istl_planet_javert", martinique_star, "Javert", "cryovolcanic", 135.0F, 120.0F, 6000.0F, 270.0F);
      javert.setCustomDescriptionId("planet_javert");
      Misc.initConditionMarket(javert);
      javert.getMarket().addCondition("thin_atmosphere");
      javert.getMarket().addCondition("poor_light");
      javert.getMarket().addCondition("cold");
      javert.getMarket().addCondition("tectonic_activity");
      javert.getMarket().addCondition("volatiles_plentiful");
      javert.getMarket().getFirstCondition("volatiles_plentiful").setSurveyed(true);
      system.addAsteroidBelt(martinique_star, 90, 6460.0F, 500.0F, 150.0F, 300.0F, "asteroid_belt", "Martinique Gamma Belt");
      system.addRingBand(martinique_star, "misc", "rings_ice0", 256.0F, 1, Color.white, 256.0F, 6400.0F, 305.0F, (String)null, (String)null);
      system.addRingBand(martinique_star, "misc", "rings_ice0", 256.0F, 3, Color.white, 256.0F, 6520.0F, 285.0F, (String)null, (String)null);
      SectorEntityToken scrap1 = DerelictThemeGenerator.addSalvageEntity(system, "equipment_cache_small", "derelict");
      scrap1.setId("martinique_scrap1");
      scrap1.setCircularOrbit(javert, 45.0F, 300.0F, 100.0F);
      Misc.setDefenderOverride(scrap1, new DefenderDataOverride("blade_breakers", 0.0F, 1.0F, 3.0F));
      scrap1.setDiscoverable(Boolean.TRUE);
      DebrisFieldParams params4 = new DebrisFieldParams(300.0F, 1.0F, 1.0E7F, 0.0F);
      params4.source = DebrisFieldSource.MIXED;
      params4.baseSalvageXP = 500L;
      SectorEntityToken debrisGamma1 = Misc.addDebrisField(system, params4, StarSystemGenerator.random);
      debrisGamma1.setSensorProfile(1000.0F);
      debrisGamma1.setDiscoverable(true);
      debrisGamma1.setCircularOrbit(martinique_star, 120.0F, 6460.0F, 270.0F);
      debrisGamma1.setId("martinique_debrisGamma1");
      SectorEntityToken gate = system.addCustomEntity("martinique_gate", "Martinique Gate", "inactive_gate", (String)null);
      gate.setCircularOrbit(system.getEntityById("martinique"), 240.0F, 6800.0F, 360.0F);
      SectorEntityToken scrap2 = DerelictThemeGenerator.addSalvageEntity(system, "supply_cache_small", "derelict");
      scrap2.setId("martinique_scrap2");
      scrap2.setCircularOrbit(gate, 135.0F, 240.0F, 180.0F);
      Misc.setDefenderOverride(scrap2, new DefenderDataOverride("blade_breakers", 0.0F, 2.0F, 5.0F));
      scrap2.setDiscoverable(Boolean.TRUE);
      SectorEntityToken pirBase = system.addCustomEntity("antilles_port", "Antilles Starport", "station_mining00", "neutral");
      pirBase.setCircularOrbitWithSpin(system.getEntityById("martinique"), 360.0F * (float)Math.random(), 6480.0F, 270.0F, 9.0F, 27.0F);
      pirBase.setDiscoverable(true);
      pirBase.setDiscoveryXP(2500.0F);
      pirBase.setSensorProfile(1.0F);
      pirBase.getMemoryWithoutUpdate().set("$abandonedStation", true);
      Misc.setAbandonedStationMarket("abandoned_pirate_market", pirBase);
      pirBase.getMarket().getSubmarket("storage").getCargo().addCommodity("metals", 150.0F);
      pirBase.getMarket().getSubmarket("storage").getCargo().addCommodity("hand_weapons", 100.0F);
      pirBase.getMarket().getSubmarket("storage").getCargo().addCommodity("drugs", 50.0F);
      pirBase.setCustomDescriptionId("station_antilles");
      StarSystemGenerator.addOrbitingEntities(system, martinique_star, StarAge.AVERAGE, 2, 4, 10800.0F, 3, true);
      system.autogenerateHyperspaceJumpPoints(true, true);
      HyperspaceTerrainPlugin plugin = (HyperspaceTerrainPlugin)Misc.getHyperspaceTerrain().getPlugin();
      NebulaEditor editor = new NebulaEditor(plugin);
      float minRadius = plugin.getTileSize() * 2.0F;
      float radius = system.getMaxRadiusInHyperspace();
      editor.clearArc(system.getLocation().x, system.getLocation().y, 0.0F, radius + minRadius, 0.0F, 360.0F);
      editor.clearArc(system.getLocation().x, system.getLocation().y, 0.0F, radius + minRadius, 0.0F, 360.0F, 0.25F);
   }
}
